version: '3.4'

services:
  home-assistant:
    image: homeassistant/home-assistant:latest
    container_name: "hass"
    # network_mode: host
    depends_on:
      # - influxdb
      - mqtt
    restart: always
    privileged: true
    volumes:
      - ./:/config
    ports:
      - 8123:8123
    environment:
      - TZ=Europe/Warsaw
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8123"]
      interval: 30s
      timeout: 10s
      retries: 6

  mqtt:
    image: eclipse-mosquitto:latest
    container_name: "mqtt"
    restart: always
    # network_mode: host
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./docker_files/mqtt/data:/mosquitto/data
      - ./docker_files/mqtt/config:/mosquitto/config
      - ./docker_files/mqtt/log:/mosquitto/log
    environment:
      - TZ=Europe/Warsaw

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: "grafana"
  #   depends_on:
  #     - influxdb
  #   environment:
  #     - TZ=Europe/Warsaw
  #     - PGID=1000
  #     - PUID=1000
  #   # network_mode: host
  #   ports:
  #     - 3000:3000
  #   restart: on-failure
  #   volumes:
  #     - ./docker_files/grafana:/var/lib/grafana

  # influxdb:
  #   image: influxdb:latest
  #   container_name: "influxdb"
  #   healthcheck:
  #     test: ["CMD", "curl", "-sI", "http://127.0.0.1:8086/ping"]
  #     interval: 30s
  #     timeout: 1s
  #     retries: 24
  #   environment:
  #     - TZ=Europe/Warsaw
  #   # network_mode: host
  #   ports:
  #     - 8083:8083
  #     - 8086:8086
  #   restart: on-failure
  #   volumes:
  #     - ./docker_files/influxdb:/var/lib/influxdb

  unifi:
    image: jacobalberty/unifi:latest
    container_name: "Unifi"
    restart: always
    volumes:
      - ./docker_files/unifi/data:/unifi/data
    # network_mode: host
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 6789:6789/tcp
      - 8080:8080/tcp
      - 8880:8880/tcp
      - 8443:8443/tcp
      - 8843:8843/tcp
    environment:
      - TZ=Europe/Warsaw

  portainer:
    image: portainer/portainer
    container_name: "portainer"
    restart: always
    volumes:
      - ./docker_files/portainer_data:/data portainer/portainer
      - /var/run/docker.sock:/var/run/docker.sock #linux
    ports:
      - 9000:9000
      - 8000:8000
    environment:
      - TZ=Europe/Warsaw

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "6653:53/tcp"
      - "6653:53/udp"
      - "6667:67/udp"
      - "6680:80/tcp"
      - "6443:443/tcp"
    environment:
      TZ: Europe/Warsaw
      WEBPASSWORD: '12345678'
    # Volumes store your data between container upgrades
    volumes:
       - './docker_files/pihole/etc-pihole/:/etc/pihole/'
       - './docker_files/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
    dns:
      - 127.0.0.1
      - 1.1.1.1
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped