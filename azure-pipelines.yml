trigger:
  batch: true
  branches:
    include:
      - master
      - feature/*
      - remodel-structure

variables:
  - group: hass-secrets

stages:
  - stage: StaticAnalysis
    displayName: Static analysis
    jobs:
      - job: Docker
        steps:
          - script: sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            displayName: 'Install docker-compose'
          - script: docker-compose config
            displayName: 'Validate docker-compose'
      # - job: Yamllint
      #   steps:
      #     - task: UsePythonVersion@0
      #       inputs:
      #         versionSpec: '3.x'
      #         addToPath: true
      #         architecture: 'x64'
      #       displayName: 'Use python 3.x'
      #     - script: pip install --upgrade pip yamllint
      #       displayName: 'Install yamllint'
      #     - script: yamllint .
      #       displayName: 'Validate yaml files'
      - job: Python
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
              architecture: 'x64'
            displayName: 'Use python 3.x'
          - script: pip install --upgrade pip flake8 mypy typed_ast
            displayName: 'Install python validation tools'
          - script: flake8 ./scripts
            displayName: 'Validate flake8'
          - script: mypy --ignore-missing-imports ./scripts
            displayName: 'Validate my-py'
      - job: Bash
        steps:
          - script: sudo apt-get install shellcheck
            displayName: 'Install shellcheck'
          - script: find . -not -name 'fix-routes.sh' -name '*.sh' -exec shellcheck {} +
            displayName: 'Validate bash scripts'
  - stage: HomeAssistant
    displayName: Home Assistant
    dependsOn: []
    jobs:
      - job:
        strategy:
          matrix:
            latest:
              HASS_PACKAGE: 'homeassistant'
            pre:
              HASS_PACKAGE: '--pre homeassistant'
        displayName: 'Check HomeAssistant config'
        steps:
          - script: sudo apt-get -y install libbluetooth-dev python-dev bluez
            displayName: 'install bt deps'

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
              architecture: 'x64'
            displayName: 'Use python 3.x'

          - script: pip install --upgrade netdisco
            displayName: 'Install python deps'

          - script: cp -a ./homeassistant/.stubs/. ./homeassistant/
            displayName: 'move secrets'

          - script: pip install --upgrade $(HASS_PACKAGE)
            displayName: 'install hass'

          - script: python -m homeassistant -c ./homeassistant --script check_config --info all
            displayName: 'test hass config'

  - stage:
    displayName: Deployment
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    dependsOn:
     - StaticAnalysis
     - HomeAssistant
    jobs:
      - job: Deployment
        steps:
          - script: sudo apt-get -y install openvpn
            displayName: 'install openvpn'
          - script: |
              echo "$(open-vpn-config)" > conf.ovpn
              sed 's/@@ /\n/g' conf.ovpn > ci.ovpn
            displayName: 'copy openvpn config'
          - script: sudo openvpn --config ci.ovpn --daemon
            displayName: 'run openvpn as daemon'
          - script: |
              apk --no-cache add openssh-client
              echo "$(rpi-ssh-key)" > id_rsa
              chmod 600 id_rsa
          - script: ssh -i id_rsa -o "StrictHostKeyChecking=no" $(rpi-user-host) "bash /home/pi/homeassistant/scripts/build.sh"


