trigger:
  batch: true
  branches:
    include:
      - master
      - feature/*

pool:
  vmImage: ubuntu-latest

variables:
  - group: hass-secrets

stages:
  - stage: StaticAnalysis
    displayName: Static analysis
    jobs:
      - job: Docker
        steps:
          - script: sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            displayName: 'Install docker-compose'
          - script: docker-compose config
            displayName: 'Validate docker-compose'
      - job: Python
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
              architecture: 'x64'
            displayName: 'Use python 3.x'
          - script: pip install --upgrade pip flake8 mypy typed_ast
            displayName: 'Install python validation tools'
          - script: flake8 ./scripts
            displayName: 'Validate flake8'
          - script: mypy --ignore-missing-imports ./scripts
            displayName: 'Validate my-py'
      - job: Bash
        steps:
          - script: sudo apt-get install shellcheck
            displayName: 'Install shellcheck'
          - script: find . -not -name 'fix-routes.sh' -name '*.sh' -exec shellcheck {} +
            displayName: 'Validate bash scripts'
  - stage: HomeAssistant
    displayName: Home Assistant
    dependsOn: []
    jobs:
      - job:
        strategy:
          matrix:
            latest:
              HASS_PACKAGE: 'homeassistant'
            pre:
              HASS_PACKAGE: '--pre homeassistant'
        displayName: 'Check HomeAssistant config'
        steps:
          - script: sudo apt-get -y install libbluetooth-dev python-dev bluez
            displayName: 'install bt deps'

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
              architecture: 'x64'
            displayName: 'Use python 3.x'

          - script: pip install --upgrade netdisco
            displayName: 'Install python deps'

          - script: |
              cp -a ./homeassistant/.stubs/. ./homeassistant/
            displayName: 'move stubs'

          - script: touch ./homeassistant/automations.yaml
            displayName: 'Create automations.yaml'

          - script: pip install --upgrade $(HASS_PACKAGE)
            displayName: 'install hass'

          - script: python -m homeassistant -c ./homeassistant --script check_config --info all
            displayName: 'test hass config'

  - stage:
    displayName: Deployment
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    dependsOn:
      - StaticAnalysis
      - HomeAssistant
    jobs:
      - job: Deployment
        steps:

        - script: sed -i 's/__DOMAIN__/$(domainName)/g' ./docker_files/nginx_conf/nginx.conf
          displayName: 'Replace domain name in nginx config'

        - task: SSH@0
          displayName: 'Stop docker'
          inputs:
            sshEndpoint: 'ssh-pi'
            runOptions: inline
            inline: 'cd /home/pi/homeassistant && docker-compose down 2> /dev/null'

        - task: CopyFilesOverSSH@0
          inputs:
            sshEndpoint: 'ssh-pi'
            sourceFolder: '.'
            contents: |
              **
              !.git/**
              !.github/**
              !.gitignore
              !azure-pipelines.yml
              !README.md
              !README_PL.md
              !docker_files/mqtt/config/mosquitto.conf
            targetFolder: '/home/pi/homeassistant'
            readyTimeout: '200000'

        - task: SSH@0
          displayName: 'Docker compose up'
          inputs:
            sshEndpoint: 'ssh-pi'
            runOptions: inline
            inline: 'cd /home/pi/homeassistant && docker-compose up -d 2> /dev/null && docker-compose restart hass 2> /dev/null'



