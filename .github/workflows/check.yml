name: Home Assistant CI

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
  schedule:
    - cron: 0 12 * * *

jobs:
  docker-compose:
    runs-on: ubuntu-latest
    steps:
      - run: sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        name: 'Install docker-compose'
      - run: docker-compose config
        name: 'Validate docker-compose'

  shellcheck:
    runs-on: ubuntu-latest
    container:
      image: koalaman/shellcheck-alpine:stable
    steps:
      - name: shellcheck
        run: |
        for file in $(grep -IRl "#\!\(/usr/bin/env \|/bin/\)" --exclude-dir ".git" .); do
          if ! shellcheck -x $file; then
            export FAILED=1
          else
            echo "$file OK"
          fi
        done
        if [ "${FAILED}" = "1" ]; then
          exit 1
        fi

  yamllint:
    runs-on: ubuntu-latest
    container:
      image: sdesbure/yamllint
    steps:
      - name: yamllint
        run: yamllint .

  python:
    runs-on: ubuntu-latest
    container:
      image: python:latest
    steps:
      - run: pip install --upgrade pip flake8 mypy typed_ast
        name: 'Install python validation tools'
      - run: flake8 ./scripts
        name: 'Validate flake8'
      - run: mypy --ignore-missing-imports ./scripts
        name: 'Validate my-py'

  home_assistant:
    runs-on: ubuntu-latest
    container:
      image: homeassistant/home-assistant:${{ matrix.hass }}
    strategy:
      matrix:
        hass: [stable, rc, beta]
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy secrets
        run: cp -a homeassistant/.stubs/. homeassistant/
      - name: Home Assistant Version
        run: python -m homeassistant --version
      - name: Home Assistant Check Config
        run: python -m homeassistant --config ./homeassistant --script check_config --info all
  # home_assistant_beta:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Getting your configuration from GitHub
  #       uses: actions/checkout@v1
  #     - name: Copy secrets
  #       run: cp -a homeassistant/.stubs/. homeassistant/
  #     - name: Home Assistant Version
  #       uses: "docker://homeassistant/home-assistant:beta"
  #       with:
  #         args: |
  #           python -m homeassistant --version
  #     - name: Home Assistant Check Config
  #       uses: "docker://homeassistant/home-assistant:beta"
  #       with:
  #         args: python -m homeassistant --config ./homeassistant --script check_config --info all
  # home_assistant_dev:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Getting your configuration from GitHub
  #       uses: actions/checkout@v1
  #     - name: Copy secrets
  #       run: cp -a homeassistant/.stubs/. homeassistant/
  #     - name: Home Assistant Version
  #       uses: "docker://homeassistant/home-assistant:dev"
  #       with:
  #         args: |
  #           python -m homeassistant --version
  #     - name: Home Assistant Check Config
  #       uses: "docker://homeassistant/home-assistant:dev"
  #       with:
  #         args: python -m homeassistant --config ./homeassistant --script check_config --info all

  deploy:
    if: success() && contains(github.ref, 'master')
    needs: home_assistant
    runs-on: ubuntu-latest
    steps:
      - name: Deploy config
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: ${{ secrets.SERV_SSH_LOGIN }}
          privateKey: ${{ secrets.DEPLOYMENT_SSH_KEY }}
          command: ssh ${{ secrets.DEPLOYMENT_SSH_LOGIN }}