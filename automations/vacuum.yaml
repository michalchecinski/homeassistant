- id: vacuum_on
  alias: Vacuum - on
  trigger:
    - platform: state
      entity_id: binary_sensor.event_hour_offset
      to: 'on'
    - platform: state
      entity_id: input_boolean.michal_home
      to: 'off'
  condition:
    condition: and
    conditions:
      # - condition: state
      #   entity_id: binary_sensor.event_hour_offset
      #   state: 'on'
      - condition: state
        entity_id: input_boolean.michal_home
        state: 'off'
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: 'off'
      - condition: state
        entity_id: 'binary_sensor.vacuum_day'
        state: 'on'
      - condition: or
        conditions:
          - condition: template
            value_template: "{{ states.script.vacuum_start.attributes.last_triggered.strftime('%Y-%m-%d') != now().strftime('%Y-%m-%d') }}"
          - condition: state
            entity_id: input_boolean.vacuum_finished
            state: 'off'
      - condition: time
        after: '07:40:00'
        before: '20:00:00'
  action:
    - service: notify.michal_html
      data:
        message: "Vacuum on"
    - service: homeassistant.turn_on
      data_template:
        entity_id: script.vacuum_start

# - id: vacuum__not_finished_notify
#   alias: Vacuum - not finished notify
#   trigger:
#     - platform: time
#       at: '19:00:00'
#     - platform: state
#       entity_id: input_boolean.michal_home
#       to: 'on'
#   condition:
#     condition: and
#     conditions:
#       - condition: state
#         entity_id: input_boolean.vacation_mode
#         state: 'off'
#       - condition: state
#         entity_id: 'binary_sensor.vacuum_day'
#         state: 'on'
#       - condition: template
#         value_template: "{{ states.script.vacuum_start.attributes.last_triggered.strftime('%Y-%m-%d') == now().strftime('%Y-%m-%d') }}"
#       - condition: state
#         entity_id: input_boolean.vacuum_finished
#         state: 'off'
#       - condition: time
#         after: '07:40:00'
#         before: '20:00:00'
#   action:
#     - service: notify.michal_html
#       data:
#         message: "Odkurzacz nie skończył pracy."
#         data:
#           actions:
#             - action: vacuum_on
#               title: Dokończ odkurzanie

- id: vacuum_vacation_on
  alias: Vacuum - vacation on
  trigger:
    platform: time
    at: '11:30:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'binary_sensor.vacuum_day'
        state: 'on'
      - condition: state
        entity_id: input_boolean.michal_home
        state: 'off'
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: 'on'
      # every two days
      - condition: template
        value_template: '{{ as_timestamp(now()) - as_timestamp(states.script.vacuum_start.attributes.last_triggered) | int > 90000 }}'
  action:
    - service: notify.michal_html
      data:
        message: "Vacuum vacation on"
    - service: homeassistant.turn_on
      data_template:
        entity_id: script.vacuum_start

- id: vacuum_vacation_coming_home_on
  alias: Vacuum - on coming home vacation
  trigger:
    - platform: numeric_state
      entity_id: proximity.home
      below: 100000
      above: 20000
  condition:
    condition: and
    conditions:
      # Heading home
      - condition: template
        value_template: '{{ states.proximity.home.attributes.dir_of_travel == "towards" }}'
      # - condition: state
      #   entity_id: 'binary_sensor.vacuum_day'
      #   state: 'on'
      - condition: state
        entity_id: input_boolean.michal_home
        state: 'off'
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: 'on'
      - condition: template
        value_template: "{{ states.script.vacuum_start.attributes.last_triggered.strftime('%Y-%m-%d') != now().strftime('%Y-%m-%d') }}"
      - condition: time
        after: '07:40:00'
        before: '20:00:00'
  action:
    - service: notify.michal_html
      data:
        message: "Odkurzacz włączony - wracasz z wakacji"
    - service: homeassistant.turn_on
      data_template:
        entity_id: script.vacuum_start

- id: vacuum_off
  alias: Vacuum - off
  trigger:
    - platform: state
      entity_id: input_boolean.michal_home
      to: 'on'
  condition:
    - condition: state
      entity_id: script.vacuum_start
      state: 'on'
  action:
    - service: homeassistant.turn_off
      data_template:
        entity_id: script.vacuum_start
    - service: notify.michal_html
      data:
        message: "Odkurzacz nie skończył pracy, ale się wyłączył - ktoś jest w domu."
        data:
          actions:
            - action: vacuum_on
              title: Dokończ odkurzanie

- id: vacuum_finished
  alias: Vacuum - finished
  trigger:
    - platform: state
      entity_id: script.vacuum_start
      to: 'off'
  condition:
    - condition: template
      value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.vacuum_off.attributes.last_triggered) | int > 40 }}'
  action:
    - service: input_boolean.turn_on
      data_template:
        entity_id: input_boolean.vacuum_finished
    - service: notify.michal_html
      data:
        message: "Odkurzacz zakończył odkurzanie"

- id: vacuum_finished_off
  alias: Vacuum - finished input bool to off
  trigger:
    - platform: time
      at: '00:01:00'
  action:
    - service: input_boolean.turn_off
      data_template:
        entity_id: input_boolean.vacuum_finished