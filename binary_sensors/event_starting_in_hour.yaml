- platform: template
  sensors:
    event_hour_offset:
      friendly_name: "Event hour offset"
      value_template: >
        {{ is_state('binary_sensor.event_hour_offset_def', 'on') or
           is_state('binary_sensor.event_hour_offset_zajecia', 'on') or
           is_state('binary_sensor.event_hour_offset_ola_michal', 'on') or
           is_state('binary_sensor.event_hour_offset_egzaminy', 'on')
        }}
    event_hour_offset_ola_michal:
      friendly_name: "Event hour offset Ola&Michal"
      value_template: >
        {% if states.calendar.ola_michal.attributes.start_time != none %}
          {{
            ((as_timestamp(states.calendar.ola_michal.attributes.start_time) - as_timestamp( strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M" ) ) <= 3600 )
            and (as_timestamp(states.calendar.ola_michal.attributes.end_time) - as_timestamp(states.calendar.ola_michal.attributes.start_time) >= 3600 )
            and states.calendar.ola_michal.attributes.all_day == False )
          }}
        {% else %}
          False
        {% endif %}

    event_hour_offset_def:
      friendly_name: "Event hour offset def"
      value_template: >
        {% if states.calendar.michalchecinski1gmailcom.attributes.start_time != none %}
          {{
            ((as_timestamp(states.calendar.michalchecinski1gmailcom.attributes.start_time) - as_timestamp( strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M" ) ) <= 3600 )
            and (as_timestamp(states.calendar.michalchecinski1gmailcom.attributes.end_time) - as_timestamp(states.calendar.michalchecinski1gmailcom.attributes.start_time) >= 3600 )
            and states.calendar.michalchecinski1gmailcom.attributes.all_day == False )
          }}
        {% else %}
          False
        {% endif %}

    event_hour_offset_zajecia:
      friendly_name: "Event hour offset zajecia"
      value_template: >
        {% if states.calendar.zajecia.attributes.start_time != none %}
          {{
            ((as_timestamp(states.calendar.zajecia.attributes.start_time) - as_timestamp( strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M" ) ) <= 3600 )
            and (as_timestamp(states.calendar.zajecia.attributes.end_time) - as_timestamp(states.calendar.zajecia.attributes.start_time) >= 3600 )
            and states.calendar.zajecia.attributes.all_day == False )
          }}
        {% else %}
          False
        {% endif %}

    event_hour_offset_egzaminy:
      friendly_name: "Event hour offset egzaminy"
      value_template: >
        {% if states.calendar.egzaminy.attributes.start_time != none %}
          {{
            ((as_timestamp(states.calendar.egzaminy.attributes.start_time) - as_timestamp( strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M" ) ) <= 3600 )
            and (as_timestamp(states.calendar.egzaminy.attributes.end_time) - as_timestamp(states.calendar.egzaminy.attributes.start_time) >= 3600 )
            and states.calendar.egzaminy.attributes.all_day == False )
          }}
        {% else %}
          False
        {% endif %}